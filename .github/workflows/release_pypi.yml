# 推送到pypi
name: release_to pypi

on:
  push:
    branches:
      - 'main'

jobs:
  release_to:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: 3.11.0
          cache: pip

      # 读取setup.py setup方法的版本号
      - name: Get version

        id: get_version
        run: |
          echo "version=$(python setup.py --version)" >> "$GITHUB_OUTPUT"

      # 获取pypi的该项目的版本号
      - name: Get pypi version
        id: get_pypi_version
        run: |
          echo "version=$(curl -s https://pypi.org/pypi/music-tool-kit/json | python -c "import sys, json; print(json.load(sys.stdin)['info']['version'])")" >> "$GITHUB_OUTPUT"

      # 如果version和curr_version相同退出工作流
      # - name: Check version
      #   env:
      #     version: ${{ steps.get_version.outputs.version }}
      #     curr_version: ${{ steps.get_pypi_version.outputs.version }}
      #   run: |
      #     if [ $version == $curr_version ]; then
      #       echo "version is same, exit"
      #       exit 1
      #     fi

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      # - name: Build and publish
      #   continue-on-error: true
      #   env:
      #     TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
      #     TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      #   run: |
      #     python setup.py sdist bdist_wheel
      #     twine upload dist/*

      - name: This works as an Interface to generate CHANGELOG.md using github-changelog-generator

        uses: saulfm08/github-action-changelog-generator@latest
        with:
          options: --token ${{ secrets.GH_TOKEN }} --add-sections '{"documentation":{"prefix":"**Documentation updates:**","labels":["docs"]},"feature":{"prefix":"**Features:**","labels":["feat"]}}'

      # 提交changelog.md
      - uses: stefanzweifel/git-auto-commit-action@v5

      # 创建release
      # - name: Create Release
      #   id: create_release
      #   continue-on-error: true
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      #   with:
      #     tag_name: v${{ steps.get_version.outputs.version }}
      #     release_name: v${{ steps.get_version.outputs.version }}
      #     body: ${{ steps.gen_release_notes.outputs.result }}
      #     draft: false
      #     prerelease: false
