# 推送到pypi
name: release_to pypi

# 只在setup.py更新时触发
on:
  push:

jobs:
  release_to:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      # 读取setup.py setup方法的版本号
      - name: Get version
        id: get_version
        run: |
          echo ::set-output name=version::$(python setup.py --version)

      # 获取pypi的该项目的版本号
      - name: Get pypi version
        id: get_pypi_version
        run: |
          echo ::set-output name=version::$(curl -s https://pypi.org/pypi/music-tool-kit/json | python -c "import sys, json; print(json.load(sys.stdin)['info']['version'])")

      # # 如果version和curr_version相同退出工作流
      # - name: Check version
      #   if: ${{ steps.get_version.outputs.version }}==${{ steps.get_pypi_version.outputs.curr_version }}
      #   env:
      #     version: ${{ steps.get_version.outputs.version }}
      #     curr_version: ${{ steps.get_pypi_version.outputs.version }}
      #   run: |
      #     echo $version
      #     echo $curr_version
      #     echo "version is same, exit"
      #     exit 1

      # 如果version和curr_version相同退出工作流
      - name: Check version
        env:
          version: ${{ steps.get_version.outputs.version }}
          curr_version: ${{ steps.get_pypi_version.outputs.version }}
        run: |
          if [ $version == $curr_version ]; then
            echo "version is same, exit"
            exit 1
          fi

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*
