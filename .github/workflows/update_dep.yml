name: Update Bin

on:
  schedule:
    # 每天UTC时间00:00运行
    - cron: '0 0 1 * *'
  workflow_dispatch:

jobs:
  update-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      # 克隆代码仓库
      - name: Checkout code
        uses: actions/checkout@v3

      # 设置Python环境
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: pip

      # 更新yt-dlp
      - name: Update yt-dlp
        run: |
          pip install pipenv
          pipenv sync
          VER=`pipenv run pip list -o | awk '$1 == "yt-dlp" {print $3}'`
          if [ -n "$VER" ]; then
            pipenv update yt-dlp
            git config --global user.email "updater@metube"
            git config --global user.name "AutoUpdater"
            git commit -m 'upgraded yt-dlp' Pipfile.lock
            git push
          fi

      # 获取并安装 um.exe
      # - name: Update um.exe
      #   run: |
      #     um_version="最新的版本号逻辑"
      #     wget -O um-windows-amd64.tar.gz "f'{um_version}/um-windows-amd64.tar.gz'"
      #     tar -zxvf um-windows-amd64.tar.gz -C /path/to/extract/

      # 构建并发布
      - name: Build and publish
        continue-on-error: true
        env:
          TWINE_USERNAME: ${{secrets.PYPI_USERNAME}}
          TWINE_PASSWORD: ${{secrets.PYPI_PASSWORD}}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*
